dynamic-cluster:
  # max_idle_time (in seconds) the worker node will be deleted if it has been idle for this amount of time
  #  default is 600
  max_idle_time: 600
  # max_down_time (in seconds) the worker node will be deleted if it has been down for this amount of time
  #  default is 480
  max_down_time: 480
  # max_launch_time (in seconds) it takes some time for a VM to be built in the cloud, from when a request is sent to the cloud
  #    if the VM is still not in a useful state after this amount of time, it will be destroyed and another attempt will be made
  #  default is 1200
  max_launch_time: 1200
  # cluster_poller_interval (in seconds) the time interval that Dynamic Cluster queries the cluster
  #  default is 10
  cluster_poller_interval: 10
  # cloud_poller_interval (in seconds) the time interval that Dynamic Cluster queries the cloud
  #  default is 20
  cloud_poller_interval: 20
  # number of workers
  worker_number: 2
  # auto mode, dynamic cluster works out which one to kill and how many to fire up according to work load
  auto_mode: True
  admin-server:
    port: 8001
  # the method to check if a new instance has finished configuration
  config-checker:
  #   the basic one is to check if a port is opened (e.g. if a service is running and listening on a port)
    port:
      number: 15002
  # a script to be executed after adding a node to Torque (just before setting it to online) 
  #  it takes two parameters which are the hostname of the VM and the IP of the VM
  #post_add_node_command: /the/path/some.sh {0} {1}
  
  # a script to be executed after removing a node from Torque (after it is destroyed from the cloud)
  #  it takes two parameters which are the hostname of the VM and the IP of the VM
  #post_remove_node_command: /the/path/some.sh {0} {1}
  
  # a script to be executed after cloud provisioning is finished (VM state in the cloud becomes ACTIVE) 
  #  it takes two parameters which are the hostname of the VM, the IP of the VM and its name in dynamic torque
  #post_vm_provision_command: /the/path/some.sh {0} {1} {2}
  
  # a script to be executed after a VM is destroyed from the cloud
  #  it takes two parameters which are the hostname of the VM, the IP of the VM and its name in dynamic torque
  #post_vm_destroy_command: /the/path/some.sh {0} {1} {2}
    
cluster:
  type: torque
  config:
    queue_to_monitor: 
      - short
      - long
    # the number of queued jobs to keep in memory for display
    queued_job_number_to_display: 30
    # the command to query jobs in the queue
    #  it must return data in XML format (-x)
    qstat_command: /usr/bin/qstat -x -t
    
    # the command to run pbsnodes command with differnt options
    #  it takes two parameters, the option and the hostname of the VM
    #    -x query node's details
    #    -o hold node (set it to offline)
    #    -c release node (clear OFFLINE)
    #  it must return data in XML format (-x)
    pbsnodes_command: /usr/bin/pbsnodes {0} {1}
    
    # the command to add a new node to torque
    #  it takes one parameter which is the hostname of the VM
    add_node_command: /usr/bin/qmgr -c "create node {0}"
    
    # the command to check node state in maui
    #  it takes one parameter which is the hostname of the VM
    check_node_command: /usr/bin/checknode {0}
    
    # the command to delete node from torque
    #  it takes one parameter which is the hostname of the VM
    remove_node_command: /usr/bin/qmgr -c "delete node {0}"
    
    # the command to set a property to node in torque
    #  it takes three parameters {0} is the hostname of the VM, {1} is the name of the property, {2} is the value of the property
    set_node_command: /usr/bin/qmgr -c "set node {0} {1} {2} {3}"
    
    # the command to get jobs' priorities
    diagnose_p_command: /usr/bin/diagnose -p
    
    # the command to set account_string to a node
    setres_command: /usr/bin/setres {0} {1} {2}
    
    # the command to unset account_string in a node
    releaseres_command: /usr/bin/releaseres `/usr/bin/showres -n | grep User | grep {0} | grep {1} | awk '{{print $3}}' `
  
cluster:
  type: sge
  config:
    queue_to_monitor: 
      - short
      - long
    # the number of queued jobs to keep in memory for display
    queued_job_number_to_display: 30
    # the command to query jobs in the queue
    #  it must return data in XML format (-xml)
    qstat_command: /opt/sge/bin/lx-amd64/qstat -xml -r
    
    # the command to run qhost command with differnt options
    #  it takes two parameters to query only one host, "-h hostname"
    qhost_command: /opt/sge/bin/lx-amd64/qhost -q -j -xml {0} {1}
    
    # the command to modify hostgroup in sge, used when adding or removing a node
    #  it takes three parameters which are -aattr/-dattr, the hostname of the VM and the group name
    hostgroup_command: /opt/sge/bin/lx-amd64/qconf {0} hostgroup hostlist {1} {2}
    
    # the command to enable/disable all queue in a node
    #  it takes two parameters which are -e(enable)/-d(disable) and the hostname of the VM
    qmod_command: /opt/sge/bin/lx-amd64/qmod {0} *@{1}
    
    # the command to delete node from torque
    #  it takes one parameter which is the hostname of the VM
    remove_node_command: /opt/sge/bin/lx-amd64/qconf -de {0}
    
    # the command to set slots in a queue for a node
    #  it takes one parameter which are the number of slots, queue name and the hostname of the VM
    set_slots_command: /opt/sge/bin/lx-amd64/qconf -rattr queue slots {0} {1}@{2}
    
    # the command to unset slots in a queue for a node before removing this node
    #  it takes one parameter which are queue name and the hostname of the VM
    unset_slots_command: /opt/sge/bin/lx-amd64/qconf -purge queue slots {0}@{1}
    
cloud:
  os-res:
    type: openstack
    reservation:
      queue:
      account:
      property:
    quantity:
      min:
      max:
    priority:
    config:
      username:
      password:
      project:
      image_uuid:
      flavor:
      auth_url:
      key_name:
      security_groups:
      availability_zone:
      instance_name_prefix:
      userdata_file:
  aws-res:
    type: aws
    reservation:
      queue:
      account:
      property:
    quantity:
      min:
      max:
    priority:
    config:
      access_key_id:
      secret_access_key:
      image_id:
      instance_type:
      region_name: ap-southeast-2
      key_name:
      security_groups:
      availability_zone:
      instance_name_prefix:
      userdata_file:
      validate_certs: False
      spot_bid:
      spot_timeout:
      #proxy:
      #proxy_port:
      